{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "models": [
            "sousTraitant",
            "mail"
        ],
        "stores": [
            "mails",
            "sousTraitants",
            "mailLinkSousTraitant",
            "specialites",
            "mails_notsent",
            "chantiers",
            "sousTraitants_full"
        ],
        "views": [
            "editSousTraitantWindow",
            "windowAddSpecialite"
        ],
        "designer|userClassName": "sousTraitants"
    },
    "designerId": "d61f7263-e573-4a70-9e2e-e9dc378117e0",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onTextfieldChange",
                "implHandler": [
                    "//On filtre le store en local",
                    "var regFind = new RegExp(newValue,\"i\");",
                    "this.getSousTraitantsStore().clearFilter(true);",
                    "this.getSousTraitantsStore().filter([",
                    "{filterFn: function(item) {",
                    "    return (regFind.test(item.get(\"name\")) || regFind.test(item.get(\"contactName\"))  );",
                    "}}",
                    "]);",
                    "this.resetMailsGrid();"
                ],
                "name": "change",
                "scope": "me",
                "designer|targetType": "Ext.form.field.Text",
                "designer|controlQuery": "#sousTraitantsGrid #searchText"
            },
            "designerId": "fc4f5a1b-743f-40f3-afc7-70868fdb1952"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onDeleteMailNotSentButtonClick",
                "implHandler": [
                    "var selectedMail = this.getMailsNotSentGrid().selModel.getSelection()[0];",
                    "",
                    "if (!selectedMail) {",
                    "    Ext.Msg.alert('Attention','Vous devez selectionner un courriel...');",
                    "    return;",
                    "}",
                    "",
                    "Ext.Msg.confirm('Attention',",
                    "'Etes vous sur de vouloir effacer le courriel?',",
                    "function(button) {",
                    "    if (button === 'yes') {",
                    "        Mails.delete(",
                    "        selectedMail.data,",
                    "        function(){",
                    "            this.getMails_notsentStore().load();",
                    "        },",
                    "        this",
                    "        );",
                    "    }",
                    "    else {",
                    "        return;",
                    "    }",
                    "},",
                    "this",
                    ");",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#deleteMailNotSentButton"
            },
            "designerId": "99671f4d-88b1-46e2-a0dc-74738c58c04c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mailsNotSentGrid",
                "selector": "#mails_notsent_grid"
            },
            "designerId": "f1a40816-b8d5-4f31-9e78-6da628f31041"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "editMail",
                "designer|params": [
                    "record"
                ],
                "implHandler": [
                    "//On reload le store des chantiers, puis on show la window",
                    "",
                    "this.getChantiersStore().load({",
                    "    scope:this,",
                    "    callback:function(){",
                    "        this.showMailWindow(record);",
                    "    }",
                    "});",
                    ""
                ]
            },
            "designerId": "534d9ac6-bb4b-4b30-8fdc-d7f7e14aaafe"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "prepareMail",
                "implHandler": [
                    "",
                    "//On ajoute les  sous traitants selectionnes dans le store (mais pas encore dans la DB)",
                    "//Le user va peut etre annuler son mail.",
                    "var selectedRecords = this.getSousTraitantsGrid().selModel.getSelection();",
                    "if (selectedRecords.length >0) {",
                    "    var count = 0;",
                    "    var linkStore = this.getMailLinkSousTraitantStore();",
                    "    linkStore.removeAll();",
                    "    for (var i in selectedRecords)",
                    "    {",
                    "        record = selectedRecords[i];",
                    "        if (record.data.mail)",
                    "        {",
                    "            //Le sous traitant a une adresse email, on peut l'ajouter au store",
                    "            linkStore.add(record);",
                    "            count++;",
                    "        }",
                    "    }",
                    "}",
                    "",
                    "this.getSousTraitants_fullStore().load();",
                    "//On affiche la fenetre",
                    "var mailWindow = Ext.widget('mailWindow');",
                    ""
                ]
            },
            "designerId": "4f714dfd-071c-4e92-894b-d31d63f585f0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "editSousTraitant",
                "implHandler": [
                    "//On prend le record selectionne",
                    "var selectedRecord = this.getSousTraitantsGrid().selModel.getSelection()[0];",
                    "",
                    "if (!selectedRecord) {",
                    "    Ext.Msg.alert('Attention','Vous devez selectionner un sous traitant...').setWidth(200);",
                    "    return;",
                    "}",
                    "",
                    "",
                    "//On retourne chercher le data dans la db, au cas ou un autre user ait modifie la fiche",
                    "var sousTraitantModel = this.getSousTraitantModel();",
                    "sousTraitantModel.load(selectedRecord.get('id'),{",
                    "    callback:function(sousTraitant){",
                    "        myForm.getForm().loadRecord(sousTraitant);",
                    "}});",
                    "",
                    "",
                    "",
                    "//On affiche la fenetre",
                    "var editSousTraitantWindow = Ext.widget('editSousTraitantWindow');",
                    "",
                    "editSousTraitantWindow.show();",
                    "",
                    "//On load le soustraitant selecitonne dans le form",
                    "var myForm = editSousTraitantWindow.down('form');",
                    "",
                    "",
                    "",
                    "//On filtre le store des specialites",
                    "var specialiteLinkStore = editSousTraitantWindow.down('#specialitesGrid').store;",
                    "specialiteLinkStore.removeAll();",
                    "specialiteLinkStore.proxy.extraParams = {sousTraitantId:selectedRecord.data.id};",
                    "specialiteLinkStore.load();",
                    "",
                    "//On filtre le store des documents",
                    "var documentsStore = Ext.getStore('documents');",
                    "documentsStore.removeAll();",
                    "documentsStore.proxy.extraParams = {sousTraitantId:selectedRecord.data.id};",
                    "documentsStore.load();",
                    "",
                    ""
                ]
            },
            "designerId": "1734ae33-2334-400e-99fb-62f322a00b7d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "reloadSousTraitantsStore",
                "implHandler": [
                    "//On vide les stores qui ont besoin d'etre vides",
                    "this.getMailsStore().removeAll();",
                    "",
                    "//On prend la valeur du comboSpecialite",
                    "var specialiteId = this.getSousTraitantsGrid().down('#comboSpecialites').getValue();",
                    "",
                    "this.getSousTraitantsGrid().selModel.deselectAll();",
                    "var myStore = this.getSousTraitantsStore();",
                    "myStore.proxy.extraParams = {",
                    "    searchText:this.getSearchField().value,",
                    "    specialiteId:specialiteId",
                    "};",
                    "myStore.load();"
                ]
            },
            "designerId": "f21b65be-3f0b-4381-a43a-a8e7d9d7cc9f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "filterSousTraitantsStoreWithText",
                "implHandler": [
                    "//On va chercher la valeur du text search",
                    "var newValue = this.getSearchField().value;",
                    "",
                    "var sousTraitantsStore = this.getSousTraitantsGrid().store;",
                    "sousTraitantsStore.clearFilter();",
                    "sousTraitantsStore.filter([",
                    "{filterFn: function(item) {",
                    "    if (item.get(\"name\") )",
                    "    {",
                    "        return (item.get(\"name\").toLowerCase().indexOf(newValue.toLowerCase()) != -1);",
                    "    }",
                    "    return false;",
                    "}}",
                    "",
                    "]);",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "c35991d6-6d30-4083-b208-e188492a3448"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "confirmAddSousTraitant",
                "designer|params": [
                    "btn",
                    "text"
                ],
                "implHandler": [
                    "if (btn == 'ok')",
                    "{",
                    "    var model = this.getSousTraitantModel();",
                    "",
                    "    // create a record",
                    "    var newRecord = Ext.create(model);",
                    "    newRecord.data.name = text;",
                    "    SousTraitants.create(newRecord.data,function(){",
                    "        this.getSearchField().setValue(text);",
                    "    },this);",
                    "",
                    "",
                    "}"
                ]
            },
            "designerId": "eae68ef9-19f6-49dc-a1d2-c2eb7188b737"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getSelectedSousTraitant",
                "implHandler": [
                    "var sousTraitantGrid = Ext.ComponentQuery.query('#sousTraitantsGrid');",
                    "if (sousTraitantGrid[0].selModel.selected.items)",
                    "{",
                    "    return sousTraitantGrid[0].selModel.selected.items[0];",
                    "",
                    "}",
                    "return false;",
                    ""
                ]
            },
            "designerId": "dc52b804-9e86-4a66-8bd7-8ae34522c9d5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onRowselectionmodelSelect",
                "implHandler": [
                    "",
                    "var mailsStore = this.getMailsGrid().store;",
                    "mailsStore.clearFilter(true);",
                    "mailsStore.filter('sousTraitantId',record.data.id);",
                    "",
                    "//On update egalement le tire du mail panel",
                    "var newTitle = 'Courriels envoyés à ' + record.data.name;",
                    "this.getMailsGrid().setTitle(newTitle);",
                    "",
                    ""
                ],
                "name": "select",
                "scope": "me",
                "designer|targetType": "Ext.selection.RowModel",
                "designer|controlQuery": "#sousTraitantsGrid"
            },
            "designerId": "4b761dbc-42fa-4c5b-bbd2-b5a5695f16b7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "updateMailsGrid",
                "designer|params": [
                    "sousTraitantId"
                ],
                "implHandler": [
                    "var mailsStore = this.getMailsGrid().store;",
                    "mailsStore.clearFilter(true);",
                    "mailsStore.filter('sousTraitantId',sousTraitantId);"
                ]
            },
            "designerId": "a3350dbd-9079-459a-ab7b-cd0c08849d9f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "resetMailsGrid",
                "implHandler": [
                    "var mailsGrid = this.getMailsGrid();",
                    "mailsGrid.store.removeAll();",
                    "mailsGrid.setTitle('Courriels');"
                ]
            },
            "designerId": "2c00cb61-7694-4194-a826-7d679e61e9c8"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "searchField",
                "selector": "#sousTraitantsGrid #searchText"
            },
            "designerId": "1c978560-cbc4-4472-bd8a-908a7f912411"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mailsGrid",
                "selector": "#mailsGrid"
            },
            "designerId": "5fe9f523-c493-4486-96a2-b72da48de32f"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "sousTraitantsGrid",
                "selector": "#sousTraitantsGrid"
            },
            "designerId": "a9426fb5-af18-471d-8e9e-d59c79fe1788"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onRefreshClick",
                "implHandler": [
                    "this.reloadSousTraitantsStore();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "#sousTraitantsGrid #refresh"
            },
            "designerId": "7c3ed28c-25ef-492c-bc37-fdc2a5c0b760"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onRefreshClickMailsGrid",
                "implHandler": [
                    "var selectedSousTraitant = this.getSousTraitantsGrid().selModel.getSelection()[0];",
                    "if (selectedSousTraitant) this.updateMailsGrid(selectedSousTraitant.internalId);",
                    "",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "#mailsGrid #refresh"
            },
            "designerId": "bd13bc89-fc9a-4378-9fe4-716c2731d228"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onComboSpecialitesSelect",
                "implHandler": [
                    "this.reloadSousTraitantsStore();",
                    "this.resetMailsGrid();"
                ],
                "name": "select",
                "scope": "me",
                "designer|targetType": "Ext.form.field.ComboBox",
                "designer|controlQuery": "#sousTraitantsGrid #comboSpecialites"
            },
            "designerId": "319b3b43-e05a-44bf-809a-bc03d7dafa38"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onSousTraitantsPanelActivate",
                "implHandler": [
                    "this.getSousTraitantsStore().proxy.sortParam = undefined; //empeche d'envoye le param sort dans le proxy",
                    "this.getSousTraitantsStore().load();"
                ],
                "name": "activate",
                "scope": "me",
                "designer|targetType": "Ext.panel.Panel",
                "designer|controlQuery": "#sousTraitantsPanel"
            },
            "designerId": "b6b68c57-f757-4f4a-a226-f8945e7d76d2"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onCreateMailButtonClick",
                "implHandler": [
                    "this.prepareMail();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#createMailButton"
            },
            "designerId": "2ed0693d-c752-441e-a959-2696d60d397a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onRefreshMailsNotSentGridClick",
                "implHandler": [
                    "this.getMails_notsentStore().load();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.panel.Tool",
                "designer|controlQuery": "#refreshMailsNotSentGrid"
            },
            "designerId": "3d544a8d-f7cb-4944-8ff2-b7909260af74"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showMailWindow",
                "designer|params": [
                    "record"
                ],
                "implHandler": [
                    "var myMail = record.data;",
                    "",
                    "",
                    "",
                    "//On reload le store de liens",
                    "var linkStore = this.getMailLinkSousTraitantStore();",
                    "linkStore.proxy.extraParams = {mailId:myMail.id};",
                    "linkStore.load();",
                    "",
                    "//On affiche la fenetre",
                    "var mailWindow = Ext.widget('mailWindow');",
                    "//On update le form",
                    "var myForm = mailWindow.down('form');",
                    "myForm.getForm().setValues(myMail);",
                    "",
                    "",
                    "if (myMail.sentDate)",
                    "{",
                    "    //Le form va etre read Only",
                    "    //Ext.Msg.alert('Attention', 'Ce mail a deja ete envoye, vous ne pourrez donc pas le modifier.');",
                    "    mailWindow.down('#comboChantiers').readOnly = true;",
                    "    mailWindow.down('#subject').setReadOnly(true);",
                    "    mailWindow.down('#message').setReadOnly(true);",
                    "",
                    "    //On hide les boutons send et save",
                    "    mailWindow.down('#save').hide();",
                    "    mailWindow.down('#send').hide();",
                    "    //On hide  les boutons add et remove destinataire",
                    "    mailWindow.down('#add').hide();",
                    "    mailWindow.down('#remove').hide();",
                    "",
                    "}",
                    ""
                ]
            },
            "designerId": "c2796188-2fb2-4e1b-a569-53e87b46c802"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onAddSousTraitantClick",
                "implHandler": [
                    "//On s'assure que le store des links specialites/sous traitant est vide",
                    "var myStore = Ext.getStore('specialiteLinkSousTraitant');",
                    "myStore.proxy.extraParams = '';",
                    "myStore.removeAll();",
                    "",
                    "Ext.widget('editSousTraitantWindow').show();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#addSousTraitant"
            },
            "designerId": "a5f182ca-a227-4b6a-8089-70e529444525"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onEditSousTraitantClick",
                "implHandler": [
                    "this.editSousTraitant();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#editSousTraitant"
            },
            "designerId": "74c47f80-6a2f-489c-8ba6-e3a47f8b967a"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onSendMailClick",
                "implHandler": [
                    "this.prepareMail();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#sendMail"
            },
            "designerId": "e29e4943-b7f9-4fe6-892b-64b1ba3f951c"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onEditMailButtonClick",
                "implHandler": [
                    "var selectedMail = this.getMailsNotSentGrid().selModel.getSelection()[0];",
                    "",
                    "if (!selectedMail) {",
                    "    Ext.Msg.alert('Attention','Vous devez selectionner un courriel...');",
                    "    return;",
                    "}",
                    "",
                    "this.editMail(selectedMail);",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#editMailButton"
            },
            "designerId": "aa5ae8a7-9eca-4f5c-8c02-786f478c66a6"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onAnnulerClick",
                "implHandler": [
                    "button.up('window').close();"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "editSousTraitantWindow #annuler"
            },
            "designerId": "15d09e58-9a84-481a-9cff-dae54fe08350"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onSaveDocumentClick",
                "implHandler": [
                    "var myEditForm = button.up('window').down('#editForm').getForm();",
                    "var sousTraitantId = myEditForm.getValues().id;",
                    "",
                    "if (! sousTraitantId) {",
                    "    Ext.Msg.alert('Attention','Vous devez d\\'abord créer un Sous Traitant pour enregistrer un document');",
                    "}",
                    "else {",
                    "",
                    "    var form = button.up('#fileForm').getForm();",
                    "    if(form.isValid()){",
                    "        form.submit({",
                    "            url: 'document-upload.php',",
                    "            scope:this,",
                    "            timeout:100,",
                    "            params: {",
                    "                sousTraitantId: sousTraitantId,",
                    "                documentTypeId:form.getValues().documentTypeId,",
                    "                documentNote:form.getValues().documentNote",
                    "            },",
                    "            waitMsg: 'Sauvegarde du document...',",
                    "            success: function(fp, o) {",
                    "                //On reload le sotre de documents",
                    "                var documentsStore = Ext.getStore('documents');",
                    "                documentsStore.load();",
                    "            }",
                    "        });",
                    "    }",
                    "}"
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "#editSousTraitantWindow #saveDocument"
            },
            "designerId": "24a80c13-beb4-4b86-a116-70e267a19974"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "onEnregistrerClick",
                "implHandler": [
                    "//On va chercher les infos du form",
                    "var myForm = Ext.getCmp('editSousTraitantWindow').down('form').getForm();",
                    "if (! myForm.isValid()) {",
                    "    return;",
                    "}",
                    "var sousTraitantModel = this.getSousTraitantModel();",
                    "",
                    "var mySousTraitant = myForm.getRecord();",
                    "",
                    "if (!mySousTraitant) {",
                    "mySousTraitant = new sousTraitantModel();",
                    "}",
                    "mySousTraitant.set(myForm.getValues());",
                    "mySousTraitant.save({",
                    "    scope:this,",
                    "    callback:function(){",
                    "        button.up('window').close();",
                    "        this.getSousTraitantsStore().load();",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me",
                "designer|targetType": "Ext.button.Button",
                "designer|controlQuery": "editSousTraitantWindow #enregistrer"
            },
            "designerId": "2750860c-74a8-403e-ac76-560c89e1e52e"
        }
    ]
}