/*
 * File: app/view/sousTraitantsGrid.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('dalpeApp.view.sousTraitantsGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.mygridpanel2',

    id: 'sousTraitantsGrid',
    focusOnToFront: false,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            viewConfig: {
                listeners: {
                    beforerefresh: {
                        fn: me.onGridviewBeforeRefresh,
                        scope: me
                    },
                    refresh: {
                        fn: me.onGridviewRefresh,
                        scope: me
                    }
                }
            },
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'combobox',
                            listConfig: {
                                loadingText: 'Searching...',
                                emptyText: 'No matching posts found.',
                                getInnerTpl: function() {
                                                return '{name}';
                                            }
                            },
                            itemId: 'comboSpecialites',
                            width: 251,
                            fieldLabel: 'Specialite',
                            labelWidth: 70,
                            displayField: 'name',
                            minChars: 0,
                            queryMode: 'local',
                            store: 'specialites',
                            typeAhead: true,
                            typeAheadDelay: 0,
                            valueField: 'id'
                        },
                        {
                            xtype: 'textfield',
                            itemId: 'searchText',
                            fieldLabel: 'Recherche Rapide',
                            checkChangeBuffer: 300
                        },
                        {
                            xtype: 'button',
                            itemId: 'addSousTraitant',
                            text: 'Ajouter un sous traitant'
                        }
                    ]
                }
            ],
            columns: [
                {
                    xtype: 'templatecolumn',
                    tpl: [
                        '<font style="font-weight: bold; font-size: 13px;">{name}</font><br>',
                        'Contact:&nbsp;&nbsp;&nbsp;&nbsp;{contactName}<br>',
                        'Note:&nbsp;&nbsp;&nbsp;&nbsp;{note}'
                    ],
                    width: 200,
                    dataIndex: 'name',
                    text: 'Societ√©',
                    flex: 3
                },
                {
                    xtype: 'gridcolumn',
                    width: 250,
                    dataIndex: 'mail',
                    text: 'Courriel',
                    flex: 1
                },
                {
                    xtype: 'templatecolumn',
                    tpl: [
                        'Telephone:&nbsp;&nbsp;{phone}<br>',
                        'Cellulaire:&nbsp;&nbsp;{cell}<br>',
                        'Fax:&nbsp;&nbsp;{fax}<br>'
                    ],
                    width: 200,
                    dataIndex: 'phone',
                    text: 'Telephones',
                    flex: 1
                }
            ],
            selModel: Ext.create('Ext.selection.RowModel', {
                mode: 'MULTI'
            })
        });

        me.callParent(arguments);
    },

    onGridviewBeforeRefresh: function(dataview, eOpts) {
        dataview.scrollTop = dataview.container.dom.firstChild.scrollTop;
    },

    onGridviewRefresh: function(dataview, eOpts) {
        dataview.container.dom.firstChild.scrollTop = dataview.scrollTop;
    }

});