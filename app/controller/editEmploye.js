/*
 * File: app/controller/editEmploye.js
 *
 * This file was generated by Sencha Architect version 2.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('dalpeApp.controller.editEmploye', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'employesGrid',
            selector: '#employesGrid'
        }
    ],

    onSavePhotoClick: function(button, e, eOpts) {
        var myEditForm = button.up('window').down('#editForm').getForm();
        var employeId = myEditForm.getValues().id;

        if (! employeId)
        {
            Ext.Msg.alert('Attention','Vous devez d\'abord créer l\'employer avant de rajouter une photo');
        }
        else
        {

            var form = button.up('#fileForm').getForm();
            if(form.isValid()){
                form.submit({
                    url: 'employe_photo_upload.php',
                    scope:this,
                    params: {
                        employeId: employeId
                    },
                    waitMsg: 'Sauvegarde de la photo...',
                    success: function(fp, o) {
                        //On reload le sotre de documents
                        //var documentsStore = Ext.getStore('documents');
                        //documentsStore.load();
                        //Ext.Msg.alert('Succès', 'Le document "' + o.result.file + '" est enregistré.');
                    }
                });
            }
        }
    },

    onAnnulerClick: function(button, e, eOpts) {
        button.up('window').close();
    },

    onEnregistrerClick: function(button, e, eOpts) {
        //On va chercher les infos du form
        var myForm = Ext.getCmp('editEmployeWindow').down('form').getForm();
        if (! myForm.isValid())
        {
            return
        }

        var employeData = myForm.getValues();
        if (employeData.id)
        {
            //On update la DB et on ferme la window
            Employes.update(employeData, function(){
                //On peut maintenant fermer la window
                button.up('window').close();
                this.getEmployesGrid().store.load();
            },this);
        }
        else
        {
            //On cree le nouvel employe
            //On update la DB et on ferme la window
            Employes.create(employeData, function(newRecord){
                //On peut maintenant fermer la window
                button.up('window').close();
                //On rajoute le nouvel employe dans le store
                this.getEmployesGrid().store.load();
            },this);

        }
    },

    savePhoto: function() {

    },

    init: function(application) {
        this.control({
            "editEmployeWindow #savePhoto": {
                click: this.onSavePhotoClick
            },
            "editEmployeWindow #annuler": {
                click: this.onAnnulerClick
            },
            "editEmployeWindow #enregistrer": {
                click: this.onEnregistrerClick
            }
        });
    }

});
