/*
 * File: app/controller/mailWindowController.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('dalpeApp.controller.mailWindowController', {
    extend: 'Ext.app.Controller',

    models: [
        'mail'
    ],
    stores: [
        'mailLinkSousTraitant'
    ],
    views: [
        'mailWindow'
    ],

    refs: [
        {
            ref: 'mailWindow',
            selector: '#mailWindow'
        },
        {
            ref: 'sousTraitantsDestMailGrid',
            selector: '#mailWindow #sousTraitantsDestMailGrid'
        }
    ],

    onSendClick: function(button, e, eOpts) {
        if (this.getSousTraitantsRecords().length === 0 ) {
            Ext.Msg.alert('Attention','Aucun sous traitant n\'a ete ajoute.');
            return;
        }
        if (Ext.getCmp('mailWindow').down('form').getForm().getValues().sentDate)
        {
            Ext.Msg.alert('Attention','Ce mail a deja ete envoye, vous ne pouvez plus le modifier.');
            return;
        }

        var myForm = this.getMailWindow().down('form').getForm();

        if (! myForm.isValid())
        {
            Ext.Msg.alert('Attention','Certains champs sont requis');
            return;
        }
        //On save
        this.saveMail(true);

    },

    onSaveClick: function(button, e, eOpts) {
        if (Ext.getCmp('mailWindow').down('form').getForm().getValues().sentDate)
        {
            Ext.Msg.alert('Attention','Ce mail a deja ete envoye, vous ne pouvez plus le modifier.');
            return;
        }


        this.saveMail();
    },

    onContactsClick: function(button, e, eOpts) {

    },

    onAttachClick: function(button, e, eOpts) {

    },

    onAddClick: function(button, e, eOpts) {
        if (Ext.getCmp('mailWindow').down('form').getForm().getValues().sentDate)
        {
            Ext.Msg.alert('Attention','Ce mail a deja ete envoye, vous ne pouvez plus le modifier.');
            return;
        }

    },

    onRemoveClick: function(button, e, eOpts) {
        if (Ext.getCmp('mailWindow').down('form').getForm().getValues().sentDate)
        {
            Ext.Msg.alert('Attention','Ce mail a deja ete envoye, vous ne pouvez plus le modifier.');
            return;
        }

        //On enleve le contact selectionne
        var selection = this.getSousTraitantsDestMailGrid().selModel.getSelection();

        if (selection.length === 0 ) return;

        var myMail = this.getMailWindow().down('form').getValues();
        if (selection)
        {
            if (myMail.id)
            {
                //Le mail est deja cree dans la DB,les liens Mails/SousTraitants sont donc aussi dans la DB 
                Mails.removeLinkSousTraitant(myMail,selection[0].data,function(){
                    var linkStore = this.getMailLinkSousTraitantStore();
                    linkStore.proxy.extraParams = {mailId:myMail.id};
                    linkStore.load();
                },this);
            }
            else
            {
                //Le mail n'est pas encore cree, on a donc juste a enlever les soustraitants du store...
                var linkStore = this.getMailLinkSousTraitantStore();
                linkStore.remove(selection[0]);
            }

        }
    },

    saveMail: function(sendMail) {
        //Pour sauvegarder un mail, il faut au moins un sous traitant, un sujet, un message



        var myWindow =this.getMailWindow();
        var myForm = myWindow.down('form').getForm();

        if (! myForm.isValid())
        {
            Ext.Msg.alert('Attention','Certains champs sont requis');
            return;
        }
        var myMail = myForm.getValues();


        if (myMail.id)
        {
            //On update les eventuells modifications du mail
            Mails.update(myMail, function(){
                if(sendMail)
                {
                    sousTraitantsData = this.getSousTraitantsRecords();
                    this.sendMail(myMail, sousTraitantsData, myWindow);
                }
                else
                {
                    myWindow.close();
                    Ext.Msg.alert('Message','Votre courriel a bien ete sauvegarde.');
                    Ext.getCmp('mails_notsent_grid').down('#refreshMailsNotSentGrid').fireEvent('click');
                    return;

                }

            }, this);
        }
        else
        {
            //C'est un nouveau mail.
            Mails.create(myMail, afterMailCreated, this);
        }


        function afterMailCreated(myMailCreated)
        {
            var myMail = myMailCreated[0];
            //Maintenant qu'on a le ID, on peut creer les liens
            sousTraitantsData = this.getSousTraitantsRecords();
            //On sauvegarde les liens
            Mails.saveLinkSoustraitant(myMail, sousTraitantsData, function(){
                if (sendMail)
                {
                    this.sendMail(myMail, sousTraitantsData, myWindow);
                }
                else
                {
                    myWindow.close();
                    Ext.Msg.alert('Message','Votre courriel a bien ete sauvegarde.');
                    Ext.getCmp('mails_notsent_grid').down('#refreshMailsNotSentGrid').fireEvent('click');

                }
            }, this);

        }



    },

    sendMail: function(myMail, sousTraitants, myWindow) {
        if (sousTraitants.length > 1)
        {
            Ext.Msg.confirm('Attention',
            'Vous etes sur le point d\'envoyer un courriel a PLUSIEURS Sous Traitants. Etes vous sur ?',
            function(button) {
                if (button === 'yes') {
                    Mails.send(myMail,sousTraitants, function(){
                    Ext.MessageBox.alert('Votre mail a ete envoye avec succes!');})
                    Ext.getCmp('mailsGrid').down('#refresh').fireEvent('click');
                    Ext.getCmp('mails_notsent_grid').down('#refreshMailsNotSentGrid').fireEvent('click');
                    myWindow.close();

                } else {
                    return;
                }
            }, this);
        }
        else if (sousTraitants.length === 1 )
        {
            Ext.Msg.confirm('Attention',
            'Etes vous sur de vouloir envoyer le Courriel ?',
            function(button) {
                if (button === 'yes') {
                    Mails.send(myMail,sousTraitants, function(){
                    Ext.MessageBox.alert('Votre mail a ete envoye avec succes!');})
                    Ext.getCmp('mailsGrid').down('#refresh').fireEvent('click');
                    Ext.getCmp('mails_notsent_grid').down('#refreshMailsNotSentGrid').fireEvent('click');
                    myWindow.close();


                } else {
                    return;
                }
            }, this);
        }



    },

    getSousTraitantsRecords: function() {
        var selectedRecords = this.getSousTraitantsDestMailGrid().store.data.items;
        var sousTraitantsData = [];
        var count = 0;
        for (var i in selectedRecords)
        {
            record = selectedRecords[i];
            sousTraitantsData[count]=record.data;
            count++;
        }
        return sousTraitantsData;
    },

    init: function(application) {
        this.control({
            "#mailWindow #send": {
                click: this.onSendClick
            },
            "#mailWindow #save": {
                click: this.onSaveClick
            },
            "#mailWindow  #contacts": {
                click: this.onContactsClick
            },
            "#mailWindow #attach": {
                click: this.onAttachClick
            },
            "#mailWindow #add": {
                click: this.onAddClick
            },
            "#mailWindow #remove": {
                click: this.onRemoveClick
            }
        });
    }

});
