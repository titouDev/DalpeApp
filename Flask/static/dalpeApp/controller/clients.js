/*
 * File: dalpeApp/controller/clients.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('dalpeApp.controller.clients', {
    extend: 'Ext.app.Controller',

    models: [
        'client'
    ],
    stores: [
        'clients'
    ],
    views: [
        'editClientWindow'
    ],

    refs: [
        {
            ref: 'clientsGrid',
            selector: '#clientsGrid'
        }
    ],

    onAddClick: function(button, e, eOpts) {
        Ext.widget('editClientWindow').show();
    },

    onEnregistrerClick: function(button, e, eOpts) {
        //On va chercher les infos du form
        var myForm = Ext.getCmp('editClientWindow').down('form').getForm();
        if (! myForm.isValid()) {
            return;
        }


        var record = myForm.getRecord();
        if (!record) {
            var clientModel = this.getClientModel();
            record = new clientModel();
        }
        record.set(myForm.getValues());
        if (!record.get('id')) {
            //POST
            record.getProxy().appendId=false; //bug fix pour eviter d'appender un slah a la fin de l'url
        }
        record.save({
            scope:this,
            callback:function(){
                button.up('window').close();
                this.getClientsGrid().store.load();
            }
        });
        record.getProxy().appendId=true;

    },

    onClientsGridActivate: function(component, eOpts) {
        this.getClientsStore().load();
    },

    onEditClientClick: function(button, e, eOpts) {
        //On prend le record selectionne
        var selectedRecord = this.getClientsGrid().selModel.getSelection()[0];
        if (!selectedRecord) {
            Ext.Msg.alert('Attention','Vous devez selectionner un client...').setWidth(200);
            return;
        }

        //On affiche la fenetre d'edit
        var editClientWindow = Ext.widget('editClientWindow');

        //On load le soustraitant selecitonne dans le form
        var myForm = editClientWindow.down('form');

        //On retourne chercher le data dans la db, au cas ou un autre user ait modifie la fiche
        var clientModel = this.getClientModel();
        clientModel.load(selectedRecord.get('id'),{
            scope:this,
            callback:function(client){
                myForm.getForm().loadRecord(client);
            }
        });

        editClientWindow.show();

    },

    init: function(application) {
        this.control({
            "#clientsGrid #addClient": {
                click: this.onAddClick
            },
            "#editClientWindow #enregistrer": {
                click: this.onEnregistrerClick
            },
            "#clientsGrid": {
                activate: this.onClientsGridActivate
            },
            "#editClient": {
                click: this.onEditClientClick
            }
        });
    }

});
